
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
    - master
  pull_request:

defaults:
  run:
    shell: bash

env:
  # These specific versions were used during development
  JAVA_VERSION: "11.0.7"
  MAVEN_VERSION: "3.6.0"
  TERRAFORM_VERSION: "v0.12.28"

jobs:
  # Only run the tests
  test:
    defaults:
      run:
        working-directory: backend
        
    runs-on: ubuntu-18.04
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Java $JAVA_VERSION 
      uses: actions/setup-java@v1
      with:
        java-version: $JAVA_VERSION

    - name: Setup Maven Wrapper $MAVEN_VERSION
      run: mvn -N io.takari:maven:wrapper -Dmaven=$MAVEN_VERSION

    - name: Run Tests
      run: ./mvnw test

  # Terraform related tests
  infra:
    env:
      PROJECT_NAME: LK8s
      PROJECT_REGION: europe-west4
      PROJECT_ZONE: europe-west4-b
    defaults:
      run:
        working-directory: infra
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: $TERRAFORM_VERSION
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    # If we can not deploy the changes we can not allow this to be in master
    - name: Terraform Plan
      run: terraform plan -var "google_credentials=${{ secrets.GCP_CREDENTIAL }}" -var "project_name=$PROJECT_NAME" -var "project_region=$PROJECT_REGION" -var "project_zone=$PROJECT_ZONE"
    # Only apply if it's master
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve

